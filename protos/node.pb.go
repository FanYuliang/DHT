// Code generated by protoc-gen-go. DO NOT EDIT.
// source: node.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetParams struct {
	ServerIdentifier     *string  `protobuf:"bytes,1,req,name=server_identifier,json=serverIdentifier" json:"server_identifier,omitempty"`
	ObjectName           *string  `protobuf:"bytes,2,req,name=object_name,json=objectName" json:"object_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetParams) Reset()         { *m = GetParams{} }
func (m *GetParams) String() string { return proto.CompactTextString(m) }
func (*GetParams) ProtoMessage()    {}
func (*GetParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{0}
}

func (m *GetParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetParams.Unmarshal(m, b)
}
func (m *GetParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetParams.Marshal(b, m, deterministic)
}
func (m *GetParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetParams.Merge(m, src)
}
func (m *GetParams) XXX_Size() int {
	return xxx_messageInfo_GetParams.Size(m)
}
func (m *GetParams) XXX_DiscardUnknown() {
	xxx_messageInfo_GetParams.DiscardUnknown(m)
}

var xxx_messageInfo_GetParams proto.InternalMessageInfo

func (m *GetParams) GetServerIdentifier() string {
	if m != nil && m.ServerIdentifier != nil {
		return *m.ServerIdentifier
	}
	return ""
}

func (m *GetParams) GetObjectName() string {
	if m != nil && m.ObjectName != nil {
		return *m.ObjectName
	}
	return ""
}

type SetParams struct {
	ServerIdentifier     *string  `protobuf:"bytes,1,req,name=server_identifier,json=serverIdentifier" json:"server_identifier,omitempty"`
	ObjectName           *string  `protobuf:"bytes,2,req,name=object_name,json=objectName" json:"object_name,omitempty"`
	Value                *string  `protobuf:"bytes,3,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetParams) Reset()         { *m = SetParams{} }
func (m *SetParams) String() string { return proto.CompactTextString(m) }
func (*SetParams) ProtoMessage()    {}
func (*SetParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_0c843d59d2d938e7, []int{1}
}

func (m *SetParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetParams.Unmarshal(m, b)
}
func (m *SetParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetParams.Marshal(b, m, deterministic)
}
func (m *SetParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetParams.Merge(m, src)
}
func (m *SetParams) XXX_Size() int {
	return xxx_messageInfo_SetParams.Size(m)
}
func (m *SetParams) XXX_DiscardUnknown() {
	xxx_messageInfo_SetParams.DiscardUnknown(m)
}

var xxx_messageInfo_SetParams proto.InternalMessageInfo

func (m *SetParams) GetServerIdentifier() string {
	if m != nil && m.ServerIdentifier != nil {
		return *m.ServerIdentifier
	}
	return ""
}

func (m *SetParams) GetObjectName() string {
	if m != nil && m.ObjectName != nil {
		return *m.ObjectName
	}
	return ""
}

func (m *SetParams) GetValue() string {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*GetParams)(nil), "protos.GetParams")
	proto.RegisterType((*SetParams)(nil), "protos.SetParams")
}

func init() { proto.RegisterFile("node.proto", fileDescriptor_0c843d59d2d938e7) }

var fileDescriptor_0c843d59d2d938e7 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xca, 0xcb, 0x4f, 0x49,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x03, 0x53, 0xc5, 0x52, 0x3c, 0xc9, 0xf9, 0xb9,
	0xb9, 0xf9, 0x79, 0x10, 0x51, 0xa5, 0x48, 0x2e, 0x4e, 0xf7, 0xd4, 0x92, 0x80, 0xc4, 0xa2, 0xc4,
	0xdc, 0x62, 0x21, 0x6d, 0x2e, 0xc1, 0xe2, 0xd4, 0xa2, 0xb2, 0xd4, 0xa2, 0xf8, 0xcc, 0x94, 0xd4,
	0xbc, 0x92, 0xcc, 0xb4, 0xcc, 0xd4, 0x22, 0x09, 0x46, 0x05, 0x26, 0x0d, 0xce, 0x20, 0x01, 0x88,
	0x84, 0x27, 0x5c, 0x5c, 0x48, 0x9e, 0x8b, 0x3b, 0x3f, 0x29, 0x2b, 0x35, 0xb9, 0x24, 0x3e, 0x2f,
	0x31, 0x37, 0x55, 0x82, 0x09, 0xac, 0x8c, 0x0b, 0x22, 0xe4, 0x97, 0x98, 0x9b, 0xaa, 0x94, 0xcf,
	0xc5, 0x19, 0x4c, 0x1b, 0xa3, 0x85, 0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0x98,
	0xc1, 0x52, 0x10, 0x8e, 0x51, 0x1e, 0x17, 0x8b, 0x5f, 0x7e, 0x4a, 0xaa, 0x90, 0x11, 0x17, 0xa7,
	0x73, 0x4e, 0x66, 0x6a, 0x5e, 0x49, 0x70, 0x6a, 0x89, 0x90, 0x20, 0xc4, 0xa3, 0xc5, 0x7a, 0x70,
	0xb7, 0x48, 0x09, 0xc0, 0x84, 0xdc, 0x52, 0x53, 0x53, 0x92, 0x12, 0x93, 0xb3, 0x95, 0x18, 0x10,
	0x7a, 0xdc, 0x91, 0xf5, 0xb8, 0xe3, 0xd3, 0x03, 0x08, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x10, 0xf3,
	0xf4, 0x5e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NodeClient is the client API for Node service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NodeClient interface {
	ClientSet(ctx context.Context, in *SetParams, opts ...grpc.CallOption) (*Feedback, error)
	ClientGet(ctx context.Context, in *GetParams, opts ...grpc.CallOption) (*Feedback, error)
}

type nodeClient struct {
	cc *grpc.ClientConn
}

func NewNodeClient(cc *grpc.ClientConn) NodeClient {
	return &nodeClient{cc}
}

func (c *nodeClient) ClientSet(ctx context.Context, in *SetParams, opts ...grpc.CallOption) (*Feedback, error) {
	out := new(Feedback)
	err := c.cc.Invoke(ctx, "/protos.Node/ClientSet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *nodeClient) ClientGet(ctx context.Context, in *GetParams, opts ...grpc.CallOption) (*Feedback, error) {
	out := new(Feedback)
	err := c.cc.Invoke(ctx, "/protos.Node/ClientGet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NodeServer is the server API for Node service.
type NodeServer interface {
	ClientSet(context.Context, *SetParams) (*Feedback, error)
	ClientGet(context.Context, *GetParams) (*Feedback, error)
}

// UnimplementedNodeServer can be embedded to have forward compatible implementations.
type UnimplementedNodeServer struct {
}

func (*UnimplementedNodeServer) ClientSet(ctx context.Context, req *SetParams) (*Feedback, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientSet not implemented")
}
func (*UnimplementedNodeServer) ClientGet(ctx context.Context, req *GetParams) (*Feedback, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClientGet not implemented")
}

func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
	s.RegisterService(&_Node_serviceDesc, srv)
}

func _Node_ClientSet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ClientSet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Node/ClientSet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ClientSet(ctx, req.(*SetParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Node_ClientGet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NodeServer).ClientGet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Node/ClientGet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NodeServer).ClientGet(ctx, req.(*GetParams))
	}
	return interceptor(ctx, in, info, handler)
}

var _Node_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Node",
	HandlerType: (*NodeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ClientSet",
			Handler:    _Node_ClientSet_Handler,
		},
		{
			MethodName: "ClientGet",
			Handler:    _Node_ClientGet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "node.proto",
}
